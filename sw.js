(function(){"use strict";let c=null;const h="ehagaki-cache-v0.1.12",u=[{"revision":null,"url":"assets/en-V4vKRyQ1.js"},{"revision":null,"url":"assets/index-11IrE2ji.css"},{"revision":null,"url":"assets/index-BGD9gMGp.js"},{"revision":null,"url":"assets/ja-tbId-BL3.js"},{"revision":"50b9df89fdada5ff32b26003bce88948","url":"index.html"},{"revision":"8eb63de4f91d4fd83cd1bb6e20414ce3","url":"registerSW.js"},{"revision":"72cb1a250c643f80d5eb582a77786d9d","url":"hagaki_2mai.png"},{"revision":"b7c4e1df1ee4ac2162296f7fa9305656","url":"icons/circle-user-solid-full.svg"},{"revision":"97a01045245952c64a77bf467c91a979","url":"icons/gear-solid-full.svg"},{"revision":"37d5908dc78c990de67476170ee51443","url":"icons/github-mark.svg"},{"revision":"26330813975ae0a2c805089b709b4275","url":"icons/image-solid-full.svg"},{"revision":"0db89f4cdf2bcdabb6d369d82c013a97","url":"icons/language-solid.svg"},{"revision":"7569a819cc451dcfb3503e060b316838","url":"manifest.webmanifest"}];if(u&&u.length>0){const e=h;self.addEventListener("install",r=>{r.waitUntil((async()=>{try{const n=await caches.open(e),t=u.map(s=>s.url);await n.addAll(t)}catch{}await self.skipWaiting()})())})}self.addEventListener("fetch",e=>{const r=new URL(e.request.url);e.request.method==="POST"&&(r.pathname.endsWith("/upload")||r.pathname.includes("/ehagaki/upload"))?e.respondWith((async()=>{try{const t=await e.request.formData(),s=[],i=t.getAll("file"),o=t.get("image");if(i&&i.length>0?s.push(...i.filter(a=>a instanceof File)):o&&o instanceof File&&s.push(o),s.length===0)return Response.redirect(new URL("/ehagaki/",self.location.origin).href,303);c={images:s.map(a=>({image:a,metadata:{name:a.name,type:a.type,size:a.size,timestamp:new Date().toISOString()}})),isMultiple:s.length>1,count:s.length};try{await f()}catch{}const d=await self.clients.matchAll({type:"window",includeUncontrolled:!0});if(d.length>0){const a=d[0];try{await a.focus();const l=(p=0)=>{try{a.postMessage({type:"SHARED_IMAGES",data:c,timestamp:Date.now(),retry:p})}catch{}};return l(),setTimeout(()=>l(1),1e3),setTimeout(()=>l(2),2e3),Response.redirect(new URL("/ehagaki/?shared=true",self.location.origin).href,303)}catch{return Response.redirect(new URL("/ehagaki/?shared=true&error=messaging",self.location.origin).href,303)}}else try{const a=new URL("/ehagaki/?shared=true",self.location.origin).href;return await self.clients.openWindow(a)?new Response("",{status:200,headers:{"Content-Type":"text/plain"}}):Response.redirect(new URL("/ehagaki/?shared=true&error=window",self.location.origin).href,303)}catch{return Response.redirect(new URL("/ehagaki/?shared=true&error=openWindow",self.location.origin).href,303)}}catch{return Response.redirect(new URL("/ehagaki/?shared=true&error=processing",self.location.origin).href,303)}})()):r.origin===self.location.origin?e.respondWith((async()=>{try{const t=await caches.open(h),s=await t.match(e.request);if(s)return s;const i=await fetch(e.request);if(i.ok&&e.request.method==="GET"){const o=i.clone();await t.put(e.request,o)}return i}catch{return new Response("Not Found",{status:404})}})()):e.respondWith(fetch(e.request))});async function f(){return new Promise((e,r)=>{try{const n=indexedDB.open("eHagakiSharedData",1);n.onupgradeneeded=t=>{const s=t.target.result;s.objectStoreNames.contains("flags")||s.createObjectStore("flags",{keyPath:"id"})},n.onerror=()=>r(new Error("IndexedDB open failed")),n.onsuccess=t=>{try{const o=t.target.result.transaction(["flags"],"readwrite").objectStore("flags"),d={id:"sharedImage",timestamp:Date.now(),value:!0},a=o.put(d);a.onsuccess=()=>e(),a.onerror=()=>r(new Error("Failed to store shared flag"))}catch(s){r(s)}}}catch(n){r(n)}})}self.addEventListener("install",e=>{e.waitUntil(self.skipWaiting())}),self.addEventListener("activate",e=>{e.waitUntil((async()=>{const r=[h],n=await caches.keys();await Promise.all(n.map(t=>{if(!r.includes(t))return caches.delete(t)})),await self.clients.claim()})())}),self.addEventListener("message",e=>{if(e.data&&e.data.type==="SKIP_WAITING"){self.skipWaiting();return}const r=e.source;if(e.data&&e.data.action==="getSharedImage"){const n=e.data.requestId||null,t={type:"SHARED_IMAGES",data:c,requestId:n,timestamp:Date.now()};e.ports&&e.ports[0]?e.ports[0].postMessage(t):r&&r.postMessage(t),c&&setTimeout(()=>{c=null},3e4)}})})();
