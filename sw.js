(function(){"use strict";let c=[];const h="ehagaki-cache-v0.2.1",u=[{"revision":null,"url":"assets/en-V4vKRyQ1.js"},{"revision":null,"url":"assets/index-11IrE2ji.css"},{"revision":null,"url":"assets/index-ZoVHZoZP.js"},{"revision":null,"url":"assets/ja-tbId-BL3.js"},{"revision":"c6a978b5c1540ec6d088f7097f556a16","url":"index.html"},{"revision":"8eb63de4f91d4fd83cd1bb6e20414ce3","url":"registerSW.js"},{"revision":"72cb1a250c643f80d5eb582a77786d9d","url":"hagaki_2mai.png"},{"revision":"b7c4e1df1ee4ac2162296f7fa9305656","url":"icons/circle-user-solid-full.svg"},{"revision":"97a01045245952c64a77bf467c91a979","url":"icons/gear-solid-full.svg"},{"revision":"37d5908dc78c990de67476170ee51443","url":"icons/github-mark.svg"},{"revision":"26330813975ae0a2c805089b709b4275","url":"icons/image-solid-full.svg"},{"revision":"0db89f4cdf2bcdabb6d369d82c013a97","url":"icons/language-solid.svg"},{"revision":"7569a819cc451dcfb3503e060b316838","url":"manifest.webmanifest"}];if(u&&u.length>0){const e=h;self.addEventListener("install",r=>{r.waitUntil((async()=>{try{const i=await caches.open(e),t=u.map(s=>s.url);await i.addAll(t)}catch{}await self.skipWaiting()})())})}self.addEventListener("fetch",e=>{const r=new URL(e.request.url);e.request.method==="POST"&&(r.pathname.endsWith("/upload")||r.pathname.includes("/ehagaki/upload"))?e.respondWith((async()=>{try{const t=await e.request.formData(),s=[],n=t.getAll("image");if(n.length===0){const a=t.get("image");a&&s.push(a)}if(n.length>0&&s.push(...n),s.length===0)return Response.redirect(new URL("/ehagaki/",self.location.origin).href,303);c=s.map((a,o)=>({image:a,metadata:{name:a.name,type:a.type,size:a.size,timestamp:new Date().toISOString(),index:o}}));try{await g(s.length)}catch{}const l=await self.clients.matchAll({type:"window",includeUncontrolled:!0});if(l.length>0){const a=l[0];try{await a.focus();const o=(d=0)=>{try{a.postMessage({type:"SHARED_IMAGES",data:c,timestamp:Date.now(),retry:d,count:s.length})}catch{}};return o(),setTimeout(()=>o(1),1e3),setTimeout(()=>o(2),2e3),Response.redirect(new URL(`/ehagaki/?shared=true&count=${s.length}`,self.location.origin).href,303)}catch{return Response.redirect(new URL("/ehagaki/?shared=true&error=messaging",self.location.origin).href,303)}}else try{const a=new URL(`/ehagaki/?shared=true&count=${s.length}`,self.location.origin).href;return await self.clients.openWindow(a)?new Response("",{status:200,headers:{"Content-Type":"text/plain"}}):Response.redirect(new URL("/ehagaki/?shared=true&error=window",self.location.origin).href,303)}catch{return Response.redirect(new URL("/ehagaki/?shared=true&error=openWindow",self.location.origin).href,303)}}catch{return Response.redirect(new URL("/ehagaki/?shared=true&error=processing",self.location.origin).href,303)}})()):r.origin===self.location.origin?e.respondWith((async()=>{try{const t=await caches.open(h),s=await t.match(e.request);if(s)return s;const n=await fetch(e.request);if(n.ok&&e.request.method==="GET"){const l=n.clone();await t.put(e.request,l)}return n}catch{return new Response("Not Found",{status:404})}})()):e.respondWith(fetch(e.request))});async function g(e=1){return new Promise((r,i)=>{try{const t=indexedDB.open("eHagakiSharedData",1);t.onupgradeneeded=s=>{const n=s.target.result;n.objectStoreNames.contains("flags")||n.createObjectStore("flags",{keyPath:"id"})},t.onerror=()=>i(new Error("IndexedDB open failed")),t.onsuccess=s=>{try{const a=s.target.result.transaction(["flags"],"readwrite").objectStore("flags"),o={id:"sharedImages",timestamp:Date.now(),value:!0,count:e},d=a.put(o);d.onsuccess=()=>r(),d.onerror=()=>i(new Error("Failed to store shared flag"))}catch(n){i(n)}}}catch(t){i(t)}})}self.addEventListener("install",e=>{e.waitUntil(self.skipWaiting())}),self.addEventListener("activate",e=>{e.waitUntil((async()=>{const r=[h],i=await caches.keys();await Promise.all(i.map(t=>{if(!r.includes(t))return caches.delete(t)})),await self.clients.claim()})())}),self.addEventListener("message",e=>{if(e.data&&e.data.type==="SKIP_WAITING"){self.skipWaiting();return}const r=e.source;if(e.data&&(e.data.action==="getSharedImage"||e.data.action==="getSharedImages")){const i=e.data.requestId||null,t={type:"SHARED_IMAGES",data:c,requestId:i,timestamp:Date.now(),count:c.length};e.ports&&e.ports[0]?e.ports[0].postMessage(t):r&&r.postMessage(t),c.length>0&&setTimeout(()=>{c=[]},3e4)}})})();
