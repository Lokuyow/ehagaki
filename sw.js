(function(){"use strict";const i="ehagaki-cache-v0.2.1",d="eHagakiSharedData",u=1;let o=null;const c=[{"revision":null,"url":"assets/en-kF_0_9_z.js"},{"revision":null,"url":"assets/index-DOtRQi2p.css"},{"revision":null,"url":"assets/index-Dq8JTQxL.js"},{"revision":null,"url":"assets/ja-B4MJRClv.js"},{"revision":"75cd23849817d25ef49720c10bcaae5b","url":"index.html"},{"revision":"8eb63de4f91d4fd83cd1bb6e20414ce3","url":"registerSW.js"},{"revision":"72cb1a250c643f80d5eb582a77786d9d","url":"hagaki_2mai.png"},{"revision":"b7c4e1df1ee4ac2162296f7fa9305656","url":"icons/circle-user-solid-full.svg"},{"revision":"97a01045245952c64a77bf467c91a979","url":"icons/gear-solid-full.svg"},{"revision":"37d5908dc78c990de67476170ee51443","url":"icons/github-mark.svg"},{"revision":"26330813975ae0a2c805089b709b4275","url":"icons/image-solid-full.svg"},{"revision":"0db89f4cdf2bcdabb6d369d82c013a97","url":"icons/language-solid.svg"},{"revision":"2cb73309bb43ea470508684c229ec40f","url":"icons/paper-plane-solid-full.svg"},{"revision":"75b796fdf72212cf9fbfd5cfa133267f","url":"icons/xmark-solid-full.svg"},{"revision":"61379bd0298fec4249cb213caeda1343","url":"manifest.webmanifest"}]||[];c.length>0&&self.addEventListener("install",e=>{e.waitUntil((async()=>{try{const t=await caches.open(i),a=c.map(r=>r.url);await t.addAll(a)}catch(t){console.error("プリキャッシュエラー:",t)}await self.skipWaiting()})())}),self.addEventListener("fetch",e=>{const t=new URL(e.request.url);h(e.request,t)?e.respondWith(f(e.request)):t.origin===self.location.origin&&e.respondWith(m(e.request))});function h(e,t){return e.method==="POST"&&(t.pathname.endsWith("/upload")||t.pathname.includes("/ehagaki/upload"))}async function f(e){try{const a=(await e.formData()).get("image");return a?(o={image:a,metadata:{name:a.name,type:a.type,size:a.size,timestamp:new Date().toISOString()}},E().catch(r=>console.error("IndexedDB保存エラー:",r)),await g()):n("/ehagaki/","no-image")}catch(t){return console.error("アップロード処理エラー:",t),n("/ehagaki/","processing-error")}}async function g(){try{const e=await self.clients.matchAll({type:"window",includeUncontrolled:!0});return e.length>0?await p(e[0]):await w()}catch(e){return console.error("クライアント処理エラー:",e),n("/ehagaki/","client-error")}}async function p(e){try{await e.focus();const t=(a=0)=>{try{e.postMessage({type:"SHARED_IMAGE",data:o,timestamp:Date.now(),retry:a})}catch(r){console.error(`メッセージ送信エラー (retry: ${a}):`,r)}};return t(0),setTimeout(()=>t(1),1e3),setTimeout(()=>t(2),2e3),n("/ehagaki/","success")}catch(t){return console.error("既存クライアント処理エラー:",t),n("/ehagaki/","messaging-error")}}async function w(){try{const e=new URL("/ehagaki/?shared=true",self.location.origin).href;return await self.clients.openWindow(e)?new Response("",{status:200,headers:{"Content-Type":"text/plain"}}):n("/ehagaki/","window-error")}catch(e){return console.error("新しいウィンドウ作成エラー:",e),n("/ehagaki/","open-window-error")}}async function m(e){try{const t=await caches.open(i),a=await t.match(e);if(a)return a;const r=await fetch(e);if(r.ok&&e.method==="GET"){const s=r.clone();await t.put(e,s)}return r}catch(t){return console.error("キャッシュ戦略エラー:",t),new Response("Not Found",{status:404})}}function n(e,t=null){const a=new URL(e,self.location.origin);return t&&(a.searchParams.set("shared","true"),a.searchParams.set("error",t)),Response.redirect(a.href,303)}async function E(){return new Promise((e,t)=>{try{const a=indexedDB.open(d,u);a.onupgradeneeded=r=>{const s=r.target.result;s.objectStoreNames.contains("flags")||s.createObjectStore("flags",{keyPath:"id"})},a.onerror=()=>t(new Error("IndexedDB open failed")),a.onsuccess=r=>{try{const s=r.target.result,R=s.transaction(["flags"],"readwrite").objectStore("flags"),I={id:"sharedImage",timestamp:Date.now(),value:!0},l=R.put(I);l.onsuccess=()=>{s.close(),e()},l.onerror=()=>{s.close(),t(new Error("Failed to store shared flag"))}}catch(s){t(s)}}}catch(a){t(a)}})}self.addEventListener("install",e=>{e.waitUntil(self.skipWaiting())}),self.addEventListener("activate",e=>{e.waitUntil((async()=>{try{const t=[i],a=await caches.keys();await Promise.all(a.map(r=>{if(!t.includes(r))return caches.delete(r)})),await self.clients.claim()}catch(t){console.error("アクティベートエラー:",t)}})())}),self.addEventListener("message",e=>{if(e.data?.type==="SKIP_WAITING"){self.skipWaiting();return}e.data?.action==="getSharedImage"&&y(e)});function y(e){const t=e.source,a=e.data.requestId||null,r={type:"SHARED_IMAGE",data:o,requestId:a,timestamp:Date.now()};e.ports?.[0]?e.ports[0].postMessage(r):t&&t.postMessage(r),o&&setTimeout(()=>{o=null},3e4)}})();
