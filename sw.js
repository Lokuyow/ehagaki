(function(){"use strict";const c="1.2.0",i=`ehagaki-cache-${c}`,l="ehagaki-profile-images",d="eHagakiSharedData",u=1;let n=null;const h=[{"revision":null,"url":"assets/en-DZKxnpLP.js"},{"revision":null,"url":"assets/index-C1oTd9_v.css"},{"revision":null,"url":"assets/index-Ca6geKjy.js"},{"revision":null,"url":"assets/index.esm-B6zogCv1.js"},{"revision":null,"url":"assets/ja-CKRzc_VX.js"},{"revision":null,"url":"assets/workbox-window.prod.es5-CwtvwXb3.js"},{"revision":"ac802d4de03ec72f92529bd37d3f4901","url":"index.html"},{"revision":"babe63f1867bfda88a54ea48714bacbf","url":"apple-touch-icon.png"},{"revision":"6fed39e02d6fc688225eddfb47cfd401","url":"ehagaki_icon_x192.png"},{"revision":"85177035c770f4dd3355b5575874a7e1","url":"ehagaki_icon_x512.png"},{"revision":"781b26f1ca16ee34e2a08db520649eb4","url":"ehagaki_icon.svg"},{"revision":"8565f947bbd349fec9860aa811536476","url":"ehagaki_icon.webp"},{"revision":"2bada714d92f8ac2c4775c7dd160ae4b","url":"ehagaki_ogp.webp"},{"revision":"80772041a3d7706a49eaf42dac91f5ad","url":"favicon.ico"},{"revision":"167bddd35a0ac0c3aaa141d18493fc0b","url":"maskable_icon_x192.png"},{"revision":"7df370b1e96677f8862bc129b565156d","url":"maskable_icon_x512.png"},{"revision":"b7c4e1df1ee4ac2162296f7fa9305656","url":"icons/circle-user-solid-full.svg"},{"revision":"97a01045245952c64a77bf467c91a979","url":"icons/gear-solid-full.svg"},{"revision":"37d5908dc78c990de67476170ee51443","url":"icons/github-mark.svg"},{"revision":"26330813975ae0a2c805089b709b4275","url":"icons/image-solid-full.svg"},{"revision":"433f5bd2615322b08560d787c499dc3d","url":"icons/language-solid-full.svg"},{"revision":"b02a88451d35ed40d647402c53868871","url":"icons/nostr-login.svg"},{"revision":"2cb73309bb43ea470508684c229ec40f","url":"icons/paper-plane-solid-full.svg"},{"revision":"8cff7ee8121e2dbc6a5ce539a9020bb7","url":"icons/rotate-right-solid-full.svg"},{"revision":"5ece31773493febdbafeb032624e8b67","url":"icons/trash-solid-full.svg"},{"revision":"75b796fdf72212cf9fbfd5cfa133267f","url":"icons/xmark-solid-full.svg"},{"revision":"cb4ae2f1d456008a99af7e37c18d0c9a","url":"manifest.webmanifest"}]||[];self.addEventListener("install",e=>{console.log("SW installing...",c),e.waitUntil((async()=>{if(h.length>0)try{const t=await caches.open(i),r=h.map(a=>a.url);await t.addAll(r),console.log("SW cached resources:",r.length)}catch(t){console.error("プリキャッシュエラー:",t)}console.log("SW installed, waiting for user action")})())}),self.addEventListener("activate",e=>{console.log("SW activating...",c),e.waitUntil((async()=>{try{const t=await caches.keys();await Promise.all(t.map(r=>{if(r!==i&&r!==l)return caches.delete(r)})),await self.clients.claim()}catch(t){console.error("アクティベートエラー:",t)}})())}),self.addEventListener("fetch",e=>{const t=new URL(e.request.url);g(e.request,t)&&t.origin===self.location.origin?e.respondWith(p(e.request)):I(e.request)?e.respondWith(S(e.request)):t.origin===self.location.origin&&e.respondWith(E(e.request))}),self.addEventListener("message",e=>{if(e.data?.type==="SKIP_WAITING"){console.log("SW received SKIP_WAITING, updating..."),self.skipWaiting();return}if(e.data?.type==="GET_VERSION"){e.ports?.[0]?.postMessage({version:c});return}e.data?.action==="getSharedImage"&&k(e),e.data?.action==="clearProfileCache"&&D().then(()=>{e.ports?.[0]?.postMessage({success:!0})}).catch(t=>{console.error("プロフィールキャッシュクリアエラー:",t),e.ports?.[0]?.postMessage({success:!1,error:t.message})})});function g(e,t){return e.method==="POST"&&(t.pathname.endsWith("/upload")||t.pathname.includes("/ehagaki/upload"))}async function p(e){try{const r=(await e.formData()).get("image");return r?(n={image:r,metadata:{name:r.name,type:r.type,size:r.size,timestamp:new Date().toISOString()}},R().catch(a=>console.error("IndexedDB保存エラー:",a)),await w()):s("/ehagaki/","no-image")}catch(t){return console.error("アップロード処理エラー:",t),s("/ehagaki/","processing-error")}}async function w(){try{const e=await self.clients.matchAll({type:"window",includeUncontrolled:!0});return e.length>0?await m(e[0]):await y()}catch(e){return console.error("クライアント処理エラー:",e),s("/ehagaki/","client-error")}}async function m(e){try{await e.focus();for(let t=0;t<3;t++)setTimeout(()=>{try{e.postMessage({type:"SHARED_IMAGE",data:n,timestamp:Date.now(),retry:t})}catch(r){console.error(`メッセージ送信エラー (retry: ${t}):`,r)}},t*1e3);return s("/ehagaki/","success")}catch(t){return console.error("既存クライアント処理エラー:",t),s("/ehagaki/","messaging-error")}}async function y(){try{const e=new URL("/ehagaki/?shared=true",self.location.origin).href;return await self.clients.openWindow(e)?new Response("",{status:200,headers:{"Content-Type":"text/plain"}}):s("/ehagaki/","window-error")}catch(e){return console.error("新しいウィンドウ作成エラー:",e),s("/ehagaki/","open-window-error")}}async function E(e){try{const t=await caches.open(i),r=await t.match(e);if(r)return r;const a=await fetch(e);return a.ok&&e.method==="GET"&&await t.put(e,a.clone()),a}catch(t){return console.error("キャッシュ戦略エラー:",t),new Response("Not Found",{status:404})}}function I(e){return e.method!=="GET"?!1:new URL(e.url).searchParams.get("profile")==="true"}async function S(e){try{const t=await caches.open(l),r=await t.match(e);if(r)return console.log("プロフィール画像をキャッシュから返却:",e.url),r;const a=await fetch(e);return a.ok&&(await t.put(e,a.clone()),console.log("プロフィール画像をキャッシュに保存:",e.url)),a}catch(t){return console.error("プロフィール画像処理エラー:",t),fetch(e)}}async function D(){try{const e=await caches.delete(l);return console.log("プロフィール画像キャッシュクリア:",e),e}catch(e){throw console.error("プロフィール画像キャッシュクリアエラー:",e),e}}function s(e,t=null){const r=new URL(e,self.location.origin);return t&&(r.searchParams.set("shared","true"),r.searchParams.set("error",t)),Response.redirect(r.href,303)}async function R(){return new Promise((e,t)=>{try{const r=indexedDB.open(d,u);r.onupgradeneeded=a=>{const o=a.target.result;o.objectStoreNames.contains("flags")||o.createObjectStore("flags",{keyPath:"id"})},r.onerror=()=>t(new Error("IndexedDB open failed")),r.onsuccess=a=>{try{const o=a.target.result,f=o.transaction(["flags"],"readwrite"),A=f.objectStore("flags");A.put({id:"sharedImage",timestamp:Date.now(),value:!0}).onsuccess=()=>{o.close(),e()},f.onerror=()=>{o.close(),t(new Error("Failed to store shared flag"))}}catch(o){t(o)}}}catch(r){t(r)}})}function k(e){const t=e.source,r=e.data.requestId||null,a={type:"SHARED_IMAGE",data:n,requestId:r,timestamp:Date.now()};e.ports?.[0]?e.ports[0].postMessage(a):t&&t.postMessage(a),n&&(n=null,N())}function N(){try{const e=indexedDB.open(d,u);e.onsuccess=t=>{try{const r=t.target.result;if(!r.objectStoreNames.contains("flags")){r.close();return}const a=r.transaction(["flags"],"readwrite"),o=a.objectStore("flags");o.delete("sharedImage").onsuccess=()=>r.close(),a.onerror=()=>r.close()}catch{}}}catch{}}})();
